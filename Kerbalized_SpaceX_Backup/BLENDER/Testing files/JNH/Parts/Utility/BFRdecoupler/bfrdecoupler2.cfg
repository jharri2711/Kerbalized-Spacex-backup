PART
{
	
	name = BFRcoupler2
	module = Part
	author = JNH
	mesh = model.mu
	
	
	scale = 1.0
	rescaleFactor = 1.0

	
	node_stack_bottom = 0.0, -1.85, 0.0, 0.0, -1.0, 0.0, 2
	node_stack_top = 0.0, 1.75, 0.0, 0.0, 1.0, 0.0, 2

	fx_gasBurst_white = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, decouple
	sound_decoupler_fire = decouple

	fx_exhaustFlame_yellow_tiny = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, running
	sound_vent_medium = engage
	sound_rocket_mini = running
	sound_vent_soft = disengage

	TechRequired = metaMaterials
	entryCost = 4500
	cost = 1000
	category = Coupling
	subcategory = 0
	title = M9-k5 BFR decoupler
	manufacturer = Kerbalized SpaceX
	description = A 7.5 meter decoupler meant for the SpaceX BFR.

	tags = BFR falcon spaceX

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- standard part parameters ---
	mass = 2.00
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 9
	maxTemp = 2500
	bulkheadProfiles = size4

	fuelCrossFeed = False

	breakingForce = 175000
	breakingTorque = 175000

	stageOffset = 1
	childStageOffset = 1

	buoyancy = 0.5
	buoyancyUseSine = False

	MODULE
	{
		name = ModuleDecouple
		ejectionForce = 300
		explosiveNodeID = top
	}
	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = true
	}
	MODULE
	{
		name = ModuleEngines
		thrustVectorTransformName = thrustTransform
		throttleLocked = True
		exhaustDamage = False
		allowShutdown = False
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 650
		heatProduction = 100
		fxOffset = 0, 0, 0.02
		PROPELLANT
		{
			name = SolidFuel
       	 		ratio = 1.0
			DrawGauge = True
		}
		atmosphereCurve
 		{
   			key = 0 180
  			key = 1 120
			key = 5 50
			key = 8 0.1
 		}
	}
	RESOURCE
	{
		name = SolidFuel
		amount = 200
		maxAmount = 200
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}
}
